{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// console.log(\"Timer\");\n\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datePicker = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({ message: \"Please choose a date in the future\" });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nlet timerInterval = null;\n\nstartButton.addEventListener(\"click\", () => {\n  if (!userSelectedDate) return;\n  startButton.disabled = true;\n  datePicker.disabled = true;\n  \n  timerInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n      datePicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n  document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n  document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n  document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["datePicker","startButton","userSelectedDate","options","selectedDates","iziToast","flatpickr","timerInterval","timeRemaining","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2FAUA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACzD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAChEJ,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBC,EAAmBE,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUN,EAAYG,CAAO,EAE7B,IAAII,EAAgB,KAEpBN,EAAY,iBAAiB,QAAS,IAAM,CACrCC,IACLD,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBO,EAAgB,YAAY,IAAM,CAChC,MAAMC,EAAgBN,EAAmB,IAAI,KAE7C,GAAIM,GAAiB,EAAG,CACtB,cAAcD,CAAa,EAC3BE,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BT,EAAW,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,EACT,CAAC,EAED,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC/E,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}